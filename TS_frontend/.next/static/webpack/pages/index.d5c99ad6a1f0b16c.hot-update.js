"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/components/fetchWrapper.tsx":
/*!*****************************************!*\
  !*** ./src/components/fetchWrapper.tsx ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeleteFetchWrapper: function() { return /* binding */ DeleteFetchWrapper; },\n/* harmony export */   FetchWrapper: function() { return /* binding */ FetchWrapper; },\n/* harmony export */   UpdateFetchWrapper: function() { return /* binding */ UpdateFetchWrapper; }\n/* harmony export */ });\nclass FetchWrapper {\n    async sendRequest() {\n        try {\n            const response = await fetch(this.adress, this.requestOptions);\n            if (response.ok) {\n                console.log(\"Request was successful!\");\n            } else {\n                console.error(\"Request failed with status \".concat(response.status));\n            }\n        } catch (error) {\n            console.error(\"An error occured:\", error);\n        }\n    }\n    constructor(adress){\n        this.adress = adress;\n    }\n}\nclass DeleteFetchWrapper extends FetchWrapper {\n    constructor(...args){\n        super(...args);\n        this.requestOptions = {\n            method: \"DELETE\"\n        };\n    }\n}\nclass UpdateFetchWrapper extends FetchWrapper {\n    constructor(adress, body){\n        super(adress);\n        if (typeof body !== \"string\") {\n            body = JSON.stringify(body);\n        }\n        this.requestOptions = {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body\n        };\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9mZXRjaFdyYXBwZXIudHN4IiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLE1BQWVBO0lBUXBCLE1BQU1DLGNBQTZCO1FBQ2pDLElBQUk7WUFDRixNQUFNQyxXQUFXLE1BQU1DLE1BQU0sSUFBSSxDQUFDQyxNQUFNLEVBQUUsSUFBSSxDQUFDQyxjQUFjO1lBQzdELElBQUlILFNBQVNJLEVBQUUsRUFBRTtnQkFDZkMsUUFBUUMsR0FBRyxDQUFDO1lBQ2QsT0FBTztnQkFDTEQsUUFBUUUsS0FBSyxDQUFDLDhCQUE4QyxPQUFoQlAsU0FBU1EsTUFBTTtZQUM3RDtRQUNGLEVBQUUsT0FBT0QsT0FBTztZQUNkRixRQUFRRSxLQUFLLENBQUMscUJBQXFCQTtRQUNyQztJQUNGO0lBZkFFLFlBQVlQLE1BQWMsQ0FBRTtRQUMxQixJQUFJLENBQUNBLE1BQU0sR0FBR0E7SUFDaEI7QUFjRjtBQUVPLE1BQU1RLDJCQUEyQlo7OzthQUN0Q0ssaUJBQThCO1lBQzVCUSxRQUFRO1FBQ1Y7O0FBQ0Y7QUFFTyxNQUFNQywyQkFBMkJkO0lBQ3RDVyxZQUFZUCxNQUFjLEVBQUVXLElBQW1CLENBQUU7UUFDL0MsS0FBSyxDQUFDWDtRQUVOLElBQUksT0FBT1csU0FBUyxVQUFVO1lBQzVCQSxPQUFPQyxLQUFLQyxTQUFTLENBQUNGO1FBQ3hCO1FBRUEsSUFBSSxDQUFDVixjQUFjLEdBQUc7WUFDcEJRLFFBQVE7WUFDUkssU0FBUztnQkFBRSxnQkFBZ0I7WUFBbUI7WUFDOUNIO1FBQ0Y7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL2ZldGNoV3JhcHBlci50c3g/YmRiYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgYWJzdHJhY3QgY2xhc3MgRmV0Y2hXcmFwcGVyIHtcbiAgcHJpdmF0ZSBhZHJlc3M6IHN0cmluZztcbiAgYWJzdHJhY3QgcmVxdWVzdE9wdGlvbnM6IFJlcXVlc3RJbml0ID0ge307XG5cbiAgY29uc3RydWN0b3IoYWRyZXNzOiBzdHJpbmcpIHtcbiAgICB0aGlzLmFkcmVzcyA9IGFkcmVzcztcbiAgfVxuXG4gIGFzeW5jIHNlbmRSZXF1ZXN0KCk6IFByb21pc2U8dm9pZD4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHRoaXMuYWRyZXNzLCB0aGlzLnJlcXVlc3RPcHRpb25zKTtcbiAgICAgIGlmIChyZXNwb25zZS5vaykge1xuICAgICAgICBjb25zb2xlLmxvZyhcIlJlcXVlc3Qgd2FzIHN1Y2Nlc3NmdWwhXCIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihgUmVxdWVzdCBmYWlsZWQgd2l0aCBzdGF0dXMgJHtyZXNwb25zZS5zdGF0dXN9YCk7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJBbiBlcnJvciBvY2N1cmVkOlwiLCBlcnJvcik7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBEZWxldGVGZXRjaFdyYXBwZXIgZXh0ZW5kcyBGZXRjaFdyYXBwZXIge1xuICByZXF1ZXN0T3B0aW9uczogUmVxdWVzdEluaXQgPSB7XG4gICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICB9O1xufVxuXG5leHBvcnQgY2xhc3MgVXBkYXRlRmV0Y2hXcmFwcGVyIGV4dGVuZHMgRmV0Y2hXcmFwcGVyIHtcbiAgY29uc3RydWN0b3IoYWRyZXNzOiBzdHJpbmcsIGJvZHk6IEpTT04gfCBzdHJpbmcpIHtcbiAgICBzdXBlcihhZHJlc3MpO1xuXG4gICAgaWYgKHR5cGVvZiBib2R5ICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICBib2R5ID0gSlNPTi5zdHJpbmdpZnkoYm9keSk7XG4gICAgfVxuXG4gICAgdGhpcy5yZXF1ZXN0T3B0aW9ucyA9IHtcbiAgICAgIG1ldGhvZDogXCJQVVRcIixcbiAgICAgIGhlYWRlcnM6IHsgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIgfSxcbiAgICAgIGJvZHksXG4gICAgfTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIkZldGNoV3JhcHBlciIsInNlbmRSZXF1ZXN0IiwicmVzcG9uc2UiLCJmZXRjaCIsImFkcmVzcyIsInJlcXVlc3RPcHRpb25zIiwib2siLCJjb25zb2xlIiwibG9nIiwiZXJyb3IiLCJzdGF0dXMiLCJjb25zdHJ1Y3RvciIsIkRlbGV0ZUZldGNoV3JhcHBlciIsIm1ldGhvZCIsIlVwZGF0ZUZldGNoV3JhcHBlciIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiaGVhZGVycyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/fetchWrapper.tsx\n"));

/***/ })

});